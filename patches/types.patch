--- src/JointLimitRange.hpp
+++ src/JointLimitRange.hpp
@@ -2,6 +2,7 @@
 #define BASE_JOINT_LIMIT_RANGE_HPP
 
 #include <base/JointState.hpp>
+#include <string>
 
 namespace base
 {
--- src/Time.cpp
+++ src/Time.cpp
@@ -226,10 +226,16 @@ Time Time::fromString(const std::string& stringTime, Time::Resolution resolution
     }
 
     struct tm tm;
+ /* TODO: windows does not support strptime, so this whole function
+          is unsusable on windows! */
+#ifdef WIN32
+	    throw std::runtime_error("base::Time::fromString failed- not implemented for windows");
+#else
     if(NULL == strptime(mainTime.c_str(), mainFormat.c_str(), &tm))
     {
         throw std::runtime_error("Time::fromString failed- Time-String '" + mainTime + "' did not match the given format '" + mainFormat +"'");
     }
+#endif
     // " ... not set by strptime(); tells mktime() to determine 
     // whether daylight saving time is in effect ..."
     // (http://pubs.opengroup.org/onlinepubs/007904975/functions/strptime.html)
--- src/Time.hpp
+++ src/Time.hpp
@@ -5,6 +5,10 @@
 #include <ostream>
 #include <stdint.h>
 
+#ifdef WIN32
+typedef long suseconds_t;
+#endif
+
 namespace base
 {
     struct Time
